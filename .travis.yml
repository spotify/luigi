language: python

jdk: oraclejdk7

services:
  - elasticsearch
  - mysql

env:
  global:
    - PIP_DOWNLOAD_CACHE=$HOME/.pip-cache
    - POSTGRES_USER=postgres
    - GCS_TEST_PROJECT_ID=luigi-travistestenvironment
    - GCS_TEST_BUCKET=luigi-travistestenvironment
    - GOOGLE_APPLICATION_CREDENTIALS=test/gcloud-credentials.json
  matrix:
    - TOXENV=flake8
    - TOXENV=docs
    - TOXENV=py27-nonhdfs
    - TOXENV=py33-nonhdfs
    - TOXENV=py34-nonhdfs
    - TOXENV=py27-unixsocket
    - TOXENV=py33-unixsocket
    - TOXENV=py34-unixsocket
    - TOXENV=py27-cdh
    - TOXENV=py33-cdh
    - TOXENV=py34-cdh
    - TOXENV=pypy-scheduler
    - TOXENV=py27-gcloud
    - TOXENV=py27-postgres
    - TOXENV=visualiser

sudo: false

cache:
  - $HOME/.pip-cache

install:
  - pip install 'tox<3.0'

before_install:
  - openssl aes-256-cbc -K $encrypted_e05f6ccc270e_key -iv $encrypted_e05f6ccc270e_iv -in test/gcloud-credentials.json.enc -out test/gcloud-credentials.json -d
    || export DIDNT_CREATE_GCP_CREDS=1

before_script:
  # TODO, only do this step for the postgres environment
  - psql -c 'create database spotify;' -U postgres

  # allow ssh loopback
  - ssh-keygen -t rsa -N '' -C '' -f ~/.ssh/id_rsa
  - cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys
  - ssh -o StrictHostKeyChecking=no localhost true

  # Create mysql database if possible but fail silently if not available.
  - mysql -e 'create database IF NOT EXISTS luigi_test;' -uroot || true

script:
  - tox --version
  - ./scripts/ci/conditional_tox.sh

branches:
  only:
    - master
